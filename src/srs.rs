pub struct SrsWallKickData {
    pub kicks: [[(i8, i8); 5]; 8],
}

pub const WALL_KICKS_JLSZT: SrsWallKickData = SrsWallKickData {
    kicks: [
        // 0->R
        [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
        // R->0
        [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
        // R->2
        [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
        // 2->R
        [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
        // 2->L
        [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
        // L->2
        [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
        // L->0
        [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
        // 0->L
        [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
    ],
};

pub const WALL_KICKS_I: SrsWallKickData = SrsWallKickData {
    kicks: [
        // 0->R
        [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
        // R->0
        [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
        // R->2
        [(0, 0), (-1, 0), (2, 0), (-1, -2), (2, 1)],
        // 2->R
        [(0, 0), (1, 0), (-2, 0), (1, 2), (-2, -1)],
        // 2->L
        [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
        // L->2
        [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
        // L->0
        [(0, 0), (1, 0), (-2, 0), (1, 2), (-2, -1)],
        // 0->L
        [(0, 0), (-1, 0), (2, 0), (-1, -2), (2, 1)],
    ],
};
